/*
 * Copyright 2020 Bitnine Co., Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
LOAD 'agensgraph';
SET search_path TO ag_catalog;
SELECT create_graph('cypher_create');
NOTICE:  graph "cypher_create" has been created
 create_graph 
--------------
 
(1 row)

SELECT * FROM cypher('cypher_create', $$CREATE ()$$) AS (a agtype);
 a 
---
(0 rows)

-- vertex graphid
SELECT * FROM cypher('cypher_create', $$CREATE (:v)$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$CREATE (:v {})$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$CREATE (:v {key: 'value'})$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_create', $$MATCH (n:v) RETURN n$$) AS (n agtype);
                                       n                                       
-------------------------------------------------------------------------------
 {"id": 844424930131969, "label": "v", "properties": {}}::vertex
 {"id": 844424930131970, "label": "v", "properties": {}}::vertex
 {"id": 844424930131971, "label": "v", "properties": {"key": "value"}}::vertex
(3 rows)

--edges without labels are not supported
SELECT * FROM cypher('cypher_create', $$CREATE (:v)-[]-()$$) AS (a agtype);
ERROR:  cannot create a edge without a label
LINE 1: ...LECT * FROM cypher('cypher_create', $$CREATE (:v)-[]-()$$) A...
                                                             ^
--paths will only create the first vertex
SELECT * FROM cypher('cypher_create', $$CREATE (:v)-[:e]-(:v)$$) AS (a agtype);
 a 
---
(0 rows)

--Validate only the first vertex was created
SELECT * FROM cypher('cypher_create', $$MATCH (n:v) RETURN n$$) AS (n agtype);
                                       n                                       
-------------------------------------------------------------------------------
 {"id": 844424930131969, "label": "v", "properties": {}}::vertex
 {"id": 844424930131970, "label": "v", "properties": {}}::vertex
 {"id": 844424930131971, "label": "v", "properties": {"key": "value"}}::vertex
 {"id": 844424930131972, "label": "v", "properties": {}}::vertex
(4 rows)

--MATCH does not support edges
SELECT * FROM cypher_create.e;
 id | start_id | end_id | properties 
----+----------+--------+------------
(0 rows)

--Validate every vertex has the correct label
SELECT * FROM cypher('cypher_create', $$MATCH (n) RETURN n$$) AS (n agtype);
                                       n                                       
-------------------------------------------------------------------------------
 {"id": 281474976710657, "label": "", "properties": {}}::vertex
 {"id": 844424930131969, "label": "v", "properties": {}}::vertex
 {"id": 844424930131970, "label": "v", "properties": {}}::vertex
 {"id": 844424930131971, "label": "v", "properties": {"key": "value"}}::vertex
 {"id": 844424930131972, "label": "v", "properties": {}}::vertex
(5 rows)

-- column definition list for CREATE clause must contain a single agtype
-- attribute
SELECT * FROM cypher('cypher_create', $$CREATE ()$$) AS (a int);
ERROR:  column definition list for CREATE clause must contain a single agtype attribute
LINE 1: SELECT * FROM cypher('cypher_create', $$CREATE ()$$) AS (a i...
                      ^
HINT:  ... cypher($$ ... CREATE ... $$) AS t(c agtype) ...
SELECT * FROM cypher('cypher_create', $$CREATE ()$$) AS (a agtype, b int);
ERROR:  column definition list for CREATE clause must contain a single agtype attribute
LINE 1: SELECT * FROM cypher('cypher_create', $$CREATE ()$$) AS (a a...
                      ^
HINT:  ... cypher($$ ... CREATE ... $$) AS t(c agtype) ...
SELECT drop_graph('cypher_create', true);
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to table cypher_create._ag_label_vertex
drop cascades to table cypher_create._ag_label_edge
drop cascades to table cypher_create.v
drop cascades to table cypher_create.e
NOTICE:  graph "cypher_create" has been dropped
 drop_graph 
------------
 
(1 row)


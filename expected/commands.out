--
-- Initial setup
--
LOAD 'agensgraph';
SET search_path TO ag_catalog;
--
-- create_graph() and drop_graph() tests.
--
SELECT create_graph('g');
NOTICE:  graph "g" has been created
 create_graph 
--------------
 
(1 row)

SELECT count(*) FROM ag_graph WHERE name = 'g';
 count 
-------
     1
(1 row)

SELECT count(*) FROM pg_namespace WHERE nspname = 'g';
 count 
-------
     1
(1 row)

-- Create a temporary table to test drop_graph().
CREATE TABLE g.tmp (i int);
SELECT drop_graph('g');
ERROR:  cannot drop schema g because other objects depend on it
DETAIL:  table g.tmp depends on schema g
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
SELECT drop_graph('g', true);
NOTICE:  drop cascades to table g.tmp
NOTICE:  graph "g" has been dropped
 drop_graph 
------------
 
(1 row)

SELECT count(*) FROM pg_namespace WHERE nspname = 'g';
 count 
-------
     0
(1 row)

SELECT count(*) FROM ag_graph WHERE name = 'g';
 count 
-------
     0
(1 row)

SELECT create_graph(NULL);
ERROR:  graph name must not be NULL
SELECT drop_graph(NULL);
ERROR:  graph name must not be NULL
--
-- alter_graph() RENAME function test.
--
-- Create 2 graphs for test.
SELECT create_graph('GraphA');
NOTICE:  graph "GraphA" has been created
 create_graph 
--------------
 
(1 row)

SELECT create_graph('GraphB');
NOTICE:  graph "GraphB" has been created
 create_graph 
--------------
 
(1 row)

-- Show GraphA's construction to verify case is preserved.
SELECT * FROM ag_graph WHERE name = 'GraphA';
  name  | namespace 
--------+-----------
 GraphA | "GraphA"
(1 row)

SELECT nspname FROM pg_namespace WHERE nspname = 'GraphA';
 nspname 
---------
 GraphA
(1 row)

-- Rename GraphA to GraphX.
SELECT alter_graph('GraphA', 'RENAME', 'GraphX');
NOTICE:  graph "GraphA" renamed to "GraphX"
 alter_graph 
-------------
 
(1 row)

-- Show GraphX's construction to verify case is preserved.
SELECT * FROM ag_graph WHERE name = 'GraphX';
  name  | namespace 
--------+-----------
 GraphX | "GraphX"
(1 row)

SELECT nspname FROM pg_namespace WHERE nspname = 'GraphX';
 nspname 
---------
 GraphX
(1 row)

-- Verify there isn't a graph GraphA anymore.
SELECT * FROM ag_graph WHERE name = 'GraphA';
 name | namespace 
------+-----------
(0 rows)

SELECT * FROM pg_namespace WHERE nspname = 'GraphA';
 nspname | nspowner | nspacl 
---------+----------+--------
(0 rows)

-- Sanity check that graphx does not exist - should return 0.
SELECT count(*) FROM ag_graph where name = 'graphx';
 count 
-------
     0
(1 row)

-- Verify case sensitivity (graphx does not exist, but GraphX does) - should fail.
SELECT alter_graph('graphx', 'RENAME', 'GRAPHX');
ERROR:  schema "graphx" does not exist
-- Checks for collisions (GraphB already exists) - should fail.
SELECT alter_graph('GraphX', 'RENAME', 'GraphB');
ERROR:  schema "GraphB" already exists
-- Remove graphs.
SELECT drop_graph('GraphX');
NOTICE:  graph "GraphX" has been dropped
 drop_graph 
------------
 
(1 row)

SELECT drop_graph('GraphB');
NOTICE:  graph "GraphB" has been dropped
 drop_graph 
------------
 
(1 row)

-- Verify that renaming a graph that does not exist fails.
SELECT alter_graph('GraphB', 'RENAME', 'GraphA');
ERROR:  schema "GraphB" does not exist
-- Verify NULL input checks.
SELECT alter_graph(NULL, 'RENAME', 'GraphA');
ERROR:  graph_name must not be NULL
SELECT alter_graph('GraphB', NULL, 'GraphA');
ERROR:  operation must not be NULL
SELECT alter_graph('GraphB', 'RENAME', NULL);
ERROR:  new_value must not be NULL
-- Verify invalid input check for operation parameter.
SELECT alter_graph('GraphB', 'DUMMY', 'GraphA');
ERROR:  invalid operation "DUMMY"
HINT:  valid operations: RENAME
--
-- End tests
--
